<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Brand and Type Page with Modal</title>
    <link rel="stylesheet" href="styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
          body {
            margin: 0;
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
        }
        .dashboard {
            display: flex;
        }
        .sidebar {
            width: 250px;
            background-color: #2c3e50;
            color: #fff;
            height: 100vh;
            padding: 20px;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1;
        }
        .btn-toggle {
            background: none;
            border: none;
            color: #fff;
            font-size: 1.5rem;
            cursor: pointer;
            transition: color 0.3s ease;
        }
        .btn-toggle:hover {
            color: #ffcc00;
        }
        .content {
            flex: 1;
            padding: 20px;
        }
        .page {
            display: flex;
            justify-content: space-between;
            gap: 20px;
        }
        .box {
            width: 50%;
            padding: 20px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            animation: fadeIn 1s ease-in;
        }
        .user-table {
            width: 100%;
            border-collapse: collapse;
            background-color: #fff;
        }
        .user-table thead {
            background-color: #f4f4f4;
        }
        .user-table th, .user-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        .status {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 4px;
            font-weight: bold;
        }
        .status.active {
            background-color: #28a745;
            color: #fff;
        }
        .status.inactive {
            background-color: #dc3545;
            color: #fff;
        }
        .add-new-btn, .back-btn {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 10px 20px;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
            margin-bottom: 20px;
            display: inline-flex;
            align-items: center;
            transition: background-color 0.3s ease;
        }
        .add-new-btn i, .back-btn i {
            margin-right: 5px;
        }
        .add-new-btn:hover, .back-btn:hover {
            background-color: #0056b3;
        }
        .back-btn {
            background-color: #6c757d;
        }
        .back-btn:hover {
            background-color: #5a6268;
        }
        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.5); /* Darker background for better focus */
        }
        .modal-content {
            background-color: #fff;
            margin: 5% auto;
            padding: 20px;
            border-radius: 8px;
            width: 80%;
            max-width: 500px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 2px solid #eee;
            padding-bottom: 10px;
        }
        .modal-header h2 {
            margin: 0;
            font-size: 1.5rem;
            color: #333;
        }
        .close {
            color: #aaa;
            font-size: 1.5rem;
            cursor: pointer;
        }
        .close:hover,
        .close:focus {
            color: #333;
            text-decoration: none;
            cursor: pointer;
        }
        .modal-body {
            margin: 20px 0;
        }
        .modal-body label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        .modal-body input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        .modal-footer {
            display: flex;
            justify-content: flex-end;
            border-top: 2px solid #eee;
            padding-top: 10px;
        }
        .modal-footer button {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 10px 20px;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }
        .modal-footer button:hover {
            background-color: #0056b3;
        }
        .edit-btn {
            background-color: #ffc107;
            color: #fff;
            border: none;
            padding: 10px 20px;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
            margin-left: 10px;
            transition: background-color 0.3s ease;
        }
        .edit-btn:hover {
            background-color: #e0a800;
        }
        @keyframes fadeIn {
            from {
                opacity: 0;
            }
            to {
                opacity: 1;
            }
        }
        body {
    margin: 0;
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
}

.dashboard {
    display: flex;
    min-height: 100vh;
}

.sidebar {
    width: 250px;
    background-color: #2c3e50;
    color: #fff;
    min-height: 100vh;
    padding: 20px;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1;
}

.content {
    flex: 1;
    padding: 20px;
    margin-left: 250px; /* Match sidebar width */
    min-height: 100vh;
    width: calc(100% - 250px); /* Ensure content takes remaining width */
    box-sizing: border-box;
}

.page {
    display: flex;
    justify-content: space-between;
    gap: 20px;
    max-width: 100%;
}

.box {
    width: calc(50% - 10px); /* Account for gap */
    padding: 20px;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    animation: fadeIn 1s ease-in;
}

/* Make the layout responsive */
@media screen and (max-width: 1024px) {
    .page {
        flex-direction: column;
    }
    
    .box {
        width: 100%;
    }
}

/* Add a media query for smaller screens */
@media screen and (max-width: 768px) {
    .sidebar {
        width: 200px;
    }
    
    .content {
        margin-left: 200px;
        width: calc(100% - 200px);
    }
}

/* Add a media query for mobile screens */
@media screen and (max-width: 576px) {
    .sidebar {
        width: 0;
        transform: translateX(-100%);
        transition: transform 0.3s ease;
    }
    
    .sidebar.active {
        width: 200px;
        transform: translateX(0);
    }
    
    .content {
        margin-left: 0;
        width: 100%;
    }
}
    </style>
</head>
<body>
    <div class="dashboard">
     <%- include('../partials/admin/header') %>
        <main class="content">
            <div class="page">
     <div class="box">
    <h1>Brand</h1>
    <button class="add-new-btn" id="addBrandBtn" onclick="openModal('brand')"><i class="fas fa-plus"></i> Add New One</button>
    <table class="user-table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Status</th>
                <th>Edit</th>
            </tr>
        </thead>
        <tbody>
            <% for (let i = 0; i < brands.length; i++) { %>
                <tr>
                    <td><%= brands[i].name %></td>
                    <td>
                        <span 
                        class="status <%= brands[i].isListed ? 'active' : 'inactive' %>" 
                        onclick="toggleStatus('<%= brands[i]._id %>', <%= brands[i].isListed %>)">
                        <%= brands[i].isListed ? 'Active' : 'Deactive' %>
                    </span>
                    </td>
                    <td><button class="edit-btn" onclick="openEditModal('<%= brands[i]._id %>', '<%= brands[i].name %>')">Edit</button></td>
                </tr>
            <% } %>
        </tbody>
    </table>
</div>

<!-- Box 2: Type -->
<div class="box">
    <h1>Type</h1>
    <button class="add-new-btn" id="addTypeBtn"><i class="fas fa-plus"></i> Add New One</button>
    <table class="user-table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Status</th>
                <th>Edit</th>
            </tr>
        </thead>
        <tbody>
            <% for (let i = 0; i < types.length; i++) { %>
                <tr>
                    <td><%= types[i].name %></td> 
                    <td>
                        <span 
                        class="status <%= types[i].isListed ? 'active' : 'inactive' %>" 
                        onclick="toggleStatus('<%= types[i]._id %>', <%= types[i].isListed %>)">
                        <%= types[i].isListed ? 'Active' : 'Deactive' %>
                    </span>
                    </td>
                    <td><button class="edit-btn" onclick="openEditModal('<%= types[i]._id %>', '<%= types[i].name %>')">Edit</button></td>
                </tr>
            <% } %>
        </tbody>
    </table>
</div>
         
<div id="addModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2>Add/Edit Entry</h2>
            <span class="close">&times;</span>
        </div>
        <div class="modal-body">
   
            <input type="hidden" id="entryType" name="type" value="">
            
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" placeholder="Enter name">      
        </div>
        <div class="modal-footer">
            <button id="saveBtn">Save</button>
        </div>
    </div>
</div>


  
<!-- Modal for Edit -->
<div id="editModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2>Edit Category</h2>
            <span class="close" onclick="closeEditModal()">&times;</span>
        </div>
        <div class="modal-body">
            <input type="hidden" id="editCategoryId">
            <label for="editName">Name:</label>
            <input type="text" id="editName" placeholder="Enter new name">
        </div>
        <div class="modal-footer">
            <button id="saveEditBtn">Save Changes</button>
        </div>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
$(document).ready(function() {
            $('#ordersTable').DataTable({
              paging: true,
              searching: true,
              ordering: true,
              pageLength: 7
            });
        });
        // this for modal //
    const addModal = document.getElementById("addModal");
    const addBrandBtn = document.getElementById("addBrandBtn");
    const addTypeBtn = document.getElementById("addTypeBtn");
    const closeBtn = document.querySelector(".close");
    const saveBtn = document.getElementById("saveBtn");
    // Function to open modal and set entry type
    function openModal(type) {
        document.getElementById('entryType').value = type;
        addModal.style.display = "block";
    }

    addBrandBtn.onclick = function () {
        openModal('brand'); 
    };

    addTypeBtn.onclick = function () {
        openModal('type');   
    };

    closeBtn.onclick = function () {
        addModal.style.display = "none";
    };

    window.onclick = function (event) {
        if (event.target == addModal) {
            addModal.style.display = "none";
        }
    };


// Handle form submission
      saveBtn.onclick = function () {
      const name = document.getElementById('name').value;
      const type = document.getElementById('entryType').value;
    fetch('/admin/add-entry', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: new URLSearchParams({
            name: name,
            type: type
        })
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        addModal.style.display = "none";
        swal({
              title: `${errorText}`,
              text: "Category add success",
              icon: "success",
              button: "back",
              });
        location.reload()
    })
    .catch(error => {
        console.error('Error:', error);
        swal({
              title: `${errorText}`,
              text: "Category already exist",
              icon: "success",
              button: "back",
              });
    });
};



  /handle status /
  
  function toggleStatus(categoryId, isListed) {
    swal({
        title: "Are you sure?",
        text: "Do you really want to change the status?",
        icon: "warning",
        buttons: true,
        dangerMode: true,
    }).then((willChange) => {
        if (willChange) {
            // Send an AJAX request
            fetch(`/admin/toggle-category-status/${categoryId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ isListed: !isListed })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    swal({
                        title: "Error",
                        text: "Error updating status.",
                        icon: "error",
                        button: "back",
                    });
                }
            })
            .catch(error => {
                swal({
                    title: "Error",
                    text: "An error occurred",
                    icon: "error",
                    button: "back",
                });
            });
        } else {
            swal({
                title: "Cancelled",
                text: "Status update was cancelled.",
                icon: "info",
                button: "OK",
            });
        }
    });
}




    
    / handle edit modal/
function openEditModal(id, name) {
    document.getElementById('editCategoryId').value = id;
    document.getElementById('editName').value = name;
    document.getElementById('editModal').style.display = 'block'; 
}
function closeEditModal() {
    document.getElementById('editModal').style.display = 'none'; 
}
document.getElementById('saveEditBtn').onclick = function() {
    const id = document.getElementById('editCategoryId').value;
    const name = document.getElementById('editName').value;

    if (name.trim() === '') {
        swal({
              title: `${errorText}`,
              text: "Name cannot be empty!",
              icon: "warning",
              button: "back",
              });
        return;
    }
    if (confirm('Are you sure you want to update this category?')) {
        fetch('/admin/update-category',{
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ id, name }) 
        })
        .then(response => {
            return response.json();
        })
        .then(data => {
            if (data.message === 'Category updated successfully') {
                swal({
              title: `${errorText}`,
              text: "Category updated!",
              icon: "success",
              button: "back",
              });
                closeEditModal(); 
                location.reload(); 
            } else {
                swal({
              title: `${errorText}`,
              text: 'Error updating category: ' + data.message,
              icon: "error",
              button: "back",
              });
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }
};
    </script>
       <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
</body>
</html>
